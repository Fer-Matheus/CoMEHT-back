// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/commit_messages": {
            "get": {
                "description": "A route to get all commit messages",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Commit Message"
                ],
                "summary": "Get all commit messages",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/views.CommitMessagesResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "A route to save a new commit message",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Commit Message"
                ],
                "summary": "Save a new commit message",
                "parameters": [
                    {
                        "description": "commitMessageRequest",
                        "name": "commitMessageRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/views.CommitMessageRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/views.CommitMessageResponse"
                        }
                    }
                }
            }
        },
        "/commit_messages/{id}": {
            "get": {
                "description": "A route to get a commit message by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Commit Message"
                ],
                "summary": "Get a commit message",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/views.CommitMessageResponse"
                        }
                    }
                }
            }
        },
        "/diffs": {
            "get": {
                "description": "A route to get all diffs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Diff"
                ],
                "summary": "Get all diffs",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/views.DiffsResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "A route to save a new diff",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Diff"
                ],
                "summary": "Save a new diff",
                "parameters": [
                    {
                        "description": "diffRequest",
                        "name": "diffRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/views.DiffRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/views.DiffResponse"
                        }
                    }
                }
            }
        },
        "/diffs/{id}": {
            "get": {
                "description": "A route to get a diff by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Diff"
                ],
                "summary": "Get a diff",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/views.DiffResponse"
                        }
                    }
                }
            }
        },
        "/duels": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "A route to get a duel for a user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Duel"
                ],
                "summary": "Get a new duel",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/views.DuelResponse"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "A route for user login",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Login for a user",
                "parameters": [
                    {
                        "description": "userRequest",
                        "name": "userRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/views.UserRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/logout": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "A route to logout a user by cookie",
                "tags": [
                    "User"
                ],
                "summary": "Logout a user",
                "responses": {}
            }
        },
        "/models": {
            "get": {
                "description": "A route to get all models",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Model"
                ],
                "summary": "Get all models",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/views.ModelsResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "A route to save a new model",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Model"
                ],
                "summary": "Save a new model",
                "parameters": [
                    {
                        "description": "modelRequest",
                        "name": "modelRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/views.ModelRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/views.ModelResponse"
                        }
                    }
                }
            }
        },
        "/models/{id}": {
            "get": {
                "description": "A route to get a model by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Model"
                ],
                "summary": "Get a model",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/views.ModelResponse"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "A route to register a new user",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "userRequest",
                        "name": "userRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/views.UserRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/results": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Route to get all results",
                "tags": [
                    "Results"
                ],
                "summary": "Get all results",
                "responses": {}
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "A route to save a duel results",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Duel"
                ],
                "summary": "Save the duel results",
                "parameters": [
                    {
                        "description": "results",
                        "name": "results",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/views.ResultsRequest"
                        }
                    }
                ],
                "responses": {}
            }
        }
    },
    "definitions": {
        "views.CommitMessageRequest": {
            "type": "object",
            "properties": {
                "diff_id": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "model_id": {
                    "type": "integer"
                }
            }
        },
        "views.CommitMessageResponse": {
            "type": "object",
            "properties": {
                "diff_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "model_id": {
                    "type": "integer"
                }
            }
        },
        "views.CommitMessagesResponse": {
            "type": "object",
            "properties": {
                "commit_messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/views.CommitMessageResponse"
                    }
                }
            }
        },
        "views.DiffRequest": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                }
            }
        },
        "views.DiffResponse": {
            "type": "object",
            "properties": {
                "commit_messages": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "content": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "views.DiffsResponse": {
            "type": "object",
            "properties": {
                "diffs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/views.DiffResponse"
                    }
                }
            }
        },
        "views.DuelResponse": {
            "type": "object",
            "properties": {
                "commit_message_a": {
                    "type": "string"
                },
                "commit_message_b": {
                    "type": "string"
                },
                "diff_content": {
                    "type": "string"
                },
                "duel_id": {
                    "type": "integer"
                }
            }
        },
        "views.ModelRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "views.ModelResponse": {
            "type": "object",
            "properties": {
                "commit_messages": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "views.ModelsResponse": {
            "type": "object",
            "properties": {
                "models": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/views.ModelResponse"
                    }
                }
            }
        },
        "views.Options": {
            "type": "object",
            "properties": {
                "aspect": {
                    "type": "string"
                },
                "choice_time": {
                    "type": "number"
                },
                "chosen_option": {
                    "type": "string"
                }
            }
        },
        "views.ResultsRequest": {
            "type": "object",
            "properties": {
                "duel_id": {
                    "type": "integer"
                },
                "options": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/views.Options"
                    }
                }
            }
        },
        "views.UserRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Commitinder Server",
	Description:      "This is the commitinder server api.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
